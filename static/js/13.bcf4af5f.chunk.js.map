{"version":3,"sources":["common/SvgIcon/index.js","components/SkillsTerminal/styles.js","components/SkillsTerminal/index.js"],"names":["StyledIcon","styled","img","size","StyledSvg","div","theme","color","get","stroke","hoverColor","ProjectIcon","src","process","alt","SvgIcon","isSvg","includes","svgName","split","iconSet","icon","TerminalContainer","Col","accent","main","secondaryBackground","margin","secondary","Titlebar","Row","background","ClickablesContainer","StyledMonoLink","MonoLink","MonoTitle","Mono","MonoLabel","TerminalBtn","span","SectionsBar","StacksContainer","SkillsTerminal","skills","t","useTranslate","useState","activeSkill","changeActiveSkill","activeClickable","setClickable","SectionBtns","map","skill","title","isActive","className","onClick","mainSkills","Clickables","justify","content","item","type","link","href","SkillStacks","clickables","clickableKeys","Array","isArray","stack","clickableData","find","clk","label","key"],"mappings":"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","file":"static/js/13.bcf4af5f.chunk.js","sourcesContent":["import IcomoonReact from \"icomoon-react\";\r\nimport get from 'lodash.get';\r\nimport iconSet from \"./selection.json\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledIcon = styled.img`\r\n  width: ${({ size }) => size}px;\r\n  height: ${({ size }) => size}px;\r\n`;\r\nconst StyledSvg = styled.div`\r\n  svg {\r\n    width: ${({ size }) => size || 32}px;\r\n    height: ${({ size }) => size || 32}px;\r\n    path {\r\n      fill: ${({ theme, color }) => (color ? `${get(theme, color)}` : \"\")};\r\n      stroke: ${({ theme, color, stroke }) =>\r\n        color && stroke ? `${get(theme, color)}` : \"\"};\r\n    }\r\n    &:hover {\r\n      path {\r\n        fill:  ${({ theme, hoverColor }) => (hoverColor ? get(theme, hoverColor) : \"\")};\r\n        stroke: ${({ theme, hoverColor, stroke }) =>\r\n          hoverColor && stroke ? get(theme, hoverColor) : \"\"};\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst SvgIcon = ({ src, size, color, stroke, hoverColor }) => {\r\n  const isSvg = src && src.includes(\".svg\");\r\n  const svgName = src && src.split(\".svg\")?.[0];\r\n  return isSvg && svgName ? (\r\n    <StyledSvg\r\n      color={color}\r\n      alt={src}\r\n      stroke={stroke}\r\n      size={size}\r\n      hoverColor={hoverColor}\r\n    >\r\n      <IcomoonReact iconSet={iconSet} icon={svgName} />\r\n    </StyledSvg>\r\n  ) : (\r\n    <StyledIcon\r\n      src={`${process.env.PUBLIC_URL}/img/${src}`}\r\n      alt={src}\r\n      size={size}\r\n    />\r\n  );\r\n};\r\nconst ProjectIcon = ({ src, size }) => (\r\n  <StyledIcon\r\n    src={`${process.env.PUBLIC_URL}/img/projects/${src}`}\r\n    alt={src}\r\n    size={size}\r\n  />\r\n);\r\n\r\nexport { ProjectIcon };\r\nexport default SvgIcon;\r\n","import styled from \"styled-components\";\nimport { Row, Col, Mono, MonoLink } from \"Common\";\n\n\nexport const TerminalContainer = styled(Col)`\n  border: 1px solid ${({ theme }) => theme.accent.main};\n  background: ${({ theme }) => theme.secondaryBackground};\n  @media only screen and (max-width: 480px) {\n    margin-left: ${({theme}) => theme.margin * 4}px;\n  }\n  padding: 0;\n  span {\n\n    color: ${({ theme }) => theme.accent.secondary};\n  }\n  > div {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const Titlebar = styled(Row)`\n  margin:0;\n  align-items: center;\n  width: 100%;\n  justify-content: space-between;\n  border-bottom: 1px solid ${({theme})=> theme.accent.main};\n  background: ${({theme})=> theme.background};\n`;\nexport const ClickablesContainer = styled(Col)`\nheight: 100%;\njustify-content: space-between;\nalign-items: flex-start;\nimg {\n  margin: ${({theme}) => theme.margin * 4}px auto;\n}\n`\n\nexport const StyledMonoLink = styled(MonoLink)`\nfont-size: 14px;\nmargin-bottom: ${({ theme }) => theme.margin}px;\n&& {\n:hover {\n  div svg path {\n    fill: ${({ theme }) => theme.accent.main};\n  }\n}\n}\n;`;\n\nexport const MonoTitle = styled(Mono)`\n  font-size: 18px;\n  color: ${({theme})=> theme.accent.main};\n`;\nexport const MonoLabel = styled(Mono)`\n  font-size: 14px;\n  color: ${({ theme }) => theme.accent.main};\n  white-space: pre;\n`;\nexport const TerminalBtn = styled.span`\n  width: 16px;\n  height: 16px;\n  background: ${({theme})=> theme.accent.main};\n  border-radius: 50px;\n  margin: ${({theme})=> theme.margin}px ${({theme})=> theme.margin}px ${({theme})=> theme.margin}px 0;\n`;\nexport const SectionsBar = styled(Row)`\n\n  & > button {\n    background: ${({theme})=> theme.background};\n    border: 1px solid ${({theme})=> theme.accent.main};\n    outline: none;\n    display: flex;\n    flex-flow: row nowrap;\n    padding: ${({theme})=> theme.margin / 2}px;\n    cursor: pointer;\n    transition: all 0.5s;\n    > span {\n      transition: all 0.5s;\n    }\n    &:hover {\n      background: ${({theme})=> theme.accent.secondary};\n      > span {\n        color: ${({theme})=> theme.background};\n      }\n    }\n    &.active {\n      background: ${({theme})=> theme.accent.main};\n      border: none;\n      > span {\n        color: ${({theme})=> theme.background};\n      }\n    }\n  }\n`;\n\nexport const StacksContainer = styled(Row)`\n  && {\n    margin-top: ${({ theme }) => theme.margin / 2}px;\n    margin-left: ${({ theme }) => theme.margin * 2}px;\n    margin-bottom: ${({ theme }) => theme.margin * 4}px;\n  }\n  justify-content: flex-start;\n  > div {\n    align-items: flex-start;\n    flex: 1;\n    span {\n      text-align: left;\n    }\n    span.title {\n      margin-bottom: ${({ theme }) => theme.margin / 2}px;\n    }\n    span:not(.title),\n    a {\n      font-size: 18px;\n      padding-left: ${({ theme }) => theme.margin * 2}px;\n      @media only screen and (max-width: 480px) {\n        padding-left: ${({ theme }) => theme.margin}px;\n      }\n    }\n    button {\n      border: none;\n      background: ${({ theme }) => theme.secondaryBackground};\n      cursor: pointer;\n      span {\n        color: ${({ theme }) => theme.accent.main};\n        &:hover {\n          color: ${({ theme }) => theme.accent.secondary};\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport { Row, Col } from \"Common\";\nimport useTranslate from \"Hooks/useTranslate\";\nimport SvgIcon, { ProjectIcon } from \"Common/SvgIcon\";\nimport {\n  SectionsBar,\n  StacksContainer,\n  MonoTitle,\n  Titlebar,\n  TerminalContainer,\n  TerminalBtn,\n  ClickablesContainer,\n  MonoLabel,\n  StyledMonoLink,\n} from \"./styles\";\n\nconst SkillsTerminal = ({ skills }) => {\n\n  const { t } = useTranslate();\n  const [activeSkill, changeActiveSkill] = useState(skills?.[0]);\n  const [activeClickable, setClickable] = useState(null);\n  const SectionBtns = () => {\n    return (\n      <SectionsBar>\n        {skills.map((skill) => {\n          const { title } = skill;\n          const isActive = title === activeSkill?.title;\n          return (\n            <button\n              key={\"btn-\" + title}\n              className={isActive ? \"active\" : \"\"}\n              onClick={() => {\n                setClickable(null);\n                changeActiveSkill(skill.mainSkills && skill);\n              }}\n            >\n              <MonoTitle>\n                {isActive ? \"🚀\" : \">\"} {t(skill.title)}\n              </MonoTitle>\n            </button>\n          );\n        })}\n      </SectionsBar>\n    );\n  };\n\n  const renderClickableContent = (content) => {\n    return content.map((item) => {\n      switch (item.type) {\n        case \"image\":\n          return <ProjectIcon size={120} src={item.src}></ProjectIcon>;\n        case \"title\":\n          return <MonoTitle>{t(item.content)}</MonoTitle>;\n        case \"label\":\n          return item.link ? (\n            <StyledMonoLink href={item.link}>\n              {t(item.content)}\n              {item.icon && <SvgIcon src={item.icon} />}\n            </StyledMonoLink>\n          ) : (\n            <MonoLabel>{t(item.content)}</MonoLabel>\n          );\n        case \"emoji\":\n          return <MonoLabel>{t(item.content)}</MonoLabel>;\n      }\n    });\n  };\n\n  const Clickables = () => {\n    return (\n      <ClickablesContainer justify=\"space-between\">\n        {activeClickable && renderClickableContent(activeClickable)}\n      </ClickablesContainer>\n    );\n  };\n\n  const SkillStacks = () => {\n    const { mainSkills, clickables } = activeSkill;\n    return (\n      <StacksContainer>\n        {mainSkills.map((skill) => {\n          const { clickableKeys } = skill;\n          return (\n            <Col key={\"skill-\" + skill.title}>\n              {Array.isArray(skill.title) ? (\n                skill.title.map((title) => (\n                  <MonoTitle key={\"title-\" + title} className={\"title\"}>\n                    👉{t(title)}\n                  </MonoTitle>\n                ))\n              ) : (\n                <MonoTitle className={\"title\"}>{t(skill.title)} 👇</MonoTitle>\n              )}\n              {(skill?.stack ?? []).map((item) => {\n                const clickableData = (clickableKeys || []).find(\n                  (clk) => clk.label === item\n                );\n                return clickableData ? (\n                  <button\n                    onClick={() => setClickable(clickables[clickableData.key])}\n                  >\n                    <MonoLabel>▶ {t(item)}</MonoLabel>\n                  </button>\n                ) : (\n                  <MonoLabel>▶ {t(item)}</MonoLabel>\n                );\n              })}\n            </Col>\n          );\n        })}\n        {activeClickable && <Clickables />}\n      </StacksContainer>\n    );\n  };\n  return (\n    <TerminalContainer>\n      <Titlebar>\n        <div></div>\n        <MonoTitle>~david 🌍</MonoTitle>\n        <Row>\n          <TerminalBtn />\n          <TerminalBtn />\n          <TerminalBtn />\n        </Row>\n      </Titlebar>\n      <SectionBtns />\n      <SkillStacks />\n    </TerminalContainer>\n  );\n};\n\nexport default SkillsTerminal;\n"],"sourceRoot":""}