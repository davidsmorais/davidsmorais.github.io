{"version":3,"sources":["common/Button/styles.js","common/Button/index.js","pages/AllPosts/index.js","pages/AllPosts/style.js"],"names":["Button","styled","button","theme","type","background","accent","secondary","props","width","children","onClick","disabled","Container","lazy","AllPostsGrid","AllPosts","t","useTranslate","useState","page","setPage","maxPage","setMaxPage","BLOGPOSTS_QUERY","CONFIG","blog","hashnodeUsername","useQuery","loading","data","posts","user","publication","handleSetPage","id","document","getElementById","scrollIntoView","behavior","useEffect","length","StyledContainer","href","justify","align","className","margin","Content","div","secondaryBackground","main"],"mappings":"+HAEaA,E,KAASC,EAAOC,OAAV,2gBACH,gBAAGC,EAAH,EAAGA,MAAH,MACH,cADG,EAAUC,KACCD,EAAME,WAAaF,EAAMG,OAAOC,aAEhD,gBAAGJ,EAAH,EAAGA,MAAH,MACE,cADF,EAAUC,KACMD,EAAMG,OAAOC,UAAYJ,EAAME,cAO9C,SAACG,GAAD,MACO,cAAfA,EAAMJ,KAAN,oBACiBI,EAAML,MAAMG,OAAOC,WAChC,SAQK,SAACC,GAAD,OAAYA,EAAMC,MAAQ,QAAU,UAIpC,SAACD,GAAD,OAAYA,EAAMC,MAAQ,QAAU,UAIpC,SAACD,GAAD,OAAYA,EAAMC,MAAQ,QAAU,U,OCzBlCT,UANA,SAAC,GAAD,IAAGI,EAAH,EAAGA,KAAMK,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,QAASC,EAAnC,EAAmCA,SAAnC,OACb,cAAC,EAAD,CAAUR,KAAMA,EAAMK,MAAOA,EAAOE,QAASA,EAASC,SAAUA,EAAhE,SACGF,M,kHCMCG,EAAYC,gBAAK,kBAAM,2CACvBC,EAAeD,gBAAK,kBAAM,kCAwEjBE,UAtEE,WAAO,IAAD,IACbC,EAAMC,cAAND,EACR,EAAwBE,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAOMC,EAAe,iCACDC,IAAOC,KAAKC,iBADX,0DAGDP,EAHC,oJAerB,EAA0BQ,YAASJ,GAA3BK,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KACXC,EAAK,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAME,YAAT,iBAAG,EAAYC,mBAAf,aAAG,EAAyBF,MACjCG,EAAgB,SAACd,GAvBN,IAACe,IAwBP,kBAvBOC,SAASC,eAAeF,GAChCG,eAAe,CACrBC,SAAU,WAsBZlB,EAAQD,IAQV,OANAoB,qBAAU,WACJT,IAAUA,EAAMU,QAAUrB,IAASE,IACrCC,EAAWH,EAAO,GAClBc,EAAcd,EAAO,MAEtB,CAACU,EAAMV,IAER,eAAC,UAAEsB,gBAAH,WACE,qBAAKP,GAAG,kBACPN,EACC,cAAC,IAAD,UAAQZ,EAAE,aAEV,eAACJ,EAAD,WACE,cAAC,IAAD,CAAOsB,GAAG,kBAAV,SAA6BlB,EAAE,cAC/B,eAAC,IAAD,CAAM0B,KAAK,IAAX,0BAAmB1B,EAAE,WACrB,cAACF,EAAD,CAAcc,QAASA,EAASE,MAAOA,IACvC,eAAC,IAAD,CAAKa,QAAQ,SAASC,MAAM,SAASC,UAAU,sBAA/C,UACE,cAAC,UAAD,CACEnC,QAAS,kBAAMuB,EAAcd,EAAO,IACpCR,SAAmB,IAATQ,EAFZ,0BAMA,eAAC,IAAD,oBACSA,EAAO,EADhB,IACoBE,GAAO,aAAUA,EAAU,MAE/C,cAAC,UAAD,CACEX,QAAS,kBAAMuB,EAAcd,EAAO,IACpCR,SAAUQ,IAASE,GAA4B,IAAjBS,EAAMU,OAFtC,qC,oECnEN5B,EAAYC,gBAAK,kBAAM,2CAEvB4B,EAAkBzC,YAAOY,EAAPZ,CAAH,mlBAIR,mBAA8B,EAA9B,EAAGE,MAAkB4C,UAEb,mBAA8B,EAA9B,EAAG5C,MAAkB4C,UA8BpCC,EAAU/C,IAAOgD,IAAV,suCA4CW,qBAAG9C,MAAkB+C,uBAChC,qBAAG/C,MAAkBG,OAAO6C,QAMjB,qBAAGhD,MAAkB+C,uBAC9B,qBAAG/C,MAAkB4C,UAErB,qBAAG5C,MAAkBG,OAAO6C,QAIrB,qBAAGhD,MAAkB4C,UAQ9B,qBAAG5C,MAAkBG,OAAO6C,QAO1B,WAAET,kBAAiBM","file":"static/js/2.b13df7a4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  background: ${({ theme, type }) =>\n    type === \"secondary\" ? theme.background : theme.accent.secondary};\n\n  color: ${({ theme, type }) =>\n    type === \"secondary\" ? theme.accent.secondary : theme.background};\n  font-family: Cabin;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 1rem;\n  font-weight: 700;\n  width: 100%;\n  border: ${(props) =>\n    props.type === \"secondary\"\n      ? `1px solid ${props.theme.accent.secondary}`\n      : \"0px\"};\n  height: 48px;\n  outline: none;\n  cursor: pointer;\n  margin-top: 0.625rem;\n  max-width: 180px;\n\n  @media only screen and (max-width: 1024px) {\n    width: ${(props) => (props.width ? \"160px\" : \"100%\")};\n  }\n\n  @media only screen and (max-width: 768px) {\n    width: ${(props) => (props.width ? \"140px\" : \"100%\")};\n  }\n\n  @media only screen and (max-width: 480px) {\n    width: ${(props) => (props.width ? \"130px\" : \"100%\")};\n  }\n`;\n","import * as S from \"./styles\";\n\nconst Button = ({ type, width, children, onClick, disabled }) => (\n  <S.Button type={type} width={width} onClick={onClick} disabled={disabled}>\n    {children}\n  </S.Button>\n);\n\nexport default Button;\n","import { lazy, useState, useEffect } from \"react\";\nimport { useQuery } from \"graphql-hooks\";\nimport useTranslate from \"Hooks/useTranslate\";\n\nimport CONFIG from \"Config\";\nimport { Title, Link, Body, Row } from \"Common\";\nimport Button from \"Common/Button\";\n\nimport S from \"./style\";\n\nconst Container = lazy(() => import(\"Common/Container\"));\nconst AllPostsGrid = lazy(() => import(\"Components/AllPostsGrid\"));\n\nconst AllPosts = () => {\n  const { t } = useTranslate();\n  const [page, setPage] = useState(0);\n  const [maxPage, setMaxPage] = useState(null);\n  const scrollTo = (id) => {\n    const element = document.getElementById(id);\n    element.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  };\n  const BLOGPOSTS_QUERY = `{\n    user(username: \"${CONFIG.blog.hashnodeUsername}\") {\n      publication {\n        posts(page: ${page}) {\n          title\n          brief\n          slug\n          coverImage\n          dateAdded\n          cuid\n        }\n      }\n    }\n  }`;\n\n  const { loading, data } = useQuery(BLOGPOSTS_QUERY);\n  const posts = data?.user?.publication?.posts;\n  const handleSetPage = (page) => {\n    scrollTo(\"all-posts-title\");\n    setPage(page);\n  };\n  useEffect(() => {\n    if (posts && !posts.length && page && !maxPage) {\n      setMaxPage(page - 1);\n      handleSetPage(page - 1);\n    }\n  }, [data, page]);\n  return (\n    <S.StyledContainer>\n      <div id=\"scroll-target\" />\n      {loading ? (\n        <Title>{t(\"Loading\")}</Title>\n      ) : (\n        <Container>\n          <Title id=\"all-posts-title\">{t(\"allPosts\")}</Title>\n          <Link href=\"/\">üè† {t(\"Home\")}</Link>\n          <AllPostsGrid loading={loading} posts={posts} />\n          <Row justify=\"center\" align=\"center\" className=\"pagination-controls\">\n            <Button\n              onClick={() => handleSetPage(page - 1)}\n              disabled={page === 0}\n            >\n              ‚¨ÖÔ∏è\n            </Button>\n            <Body>\n              Page: {page + 1} {maxPage && `of ${maxPage + 1}`}\n            </Body>\n            <Button\n              onClick={() => handleSetPage(page + 1)}\n              disabled={page === maxPage || posts.length !== 6}\n            >\n              ‚û°Ô∏è\n            </Button>\n          </Row>\n        </Container>\n      )}\n    </S.StyledContainer>\n  );\n};\n\nexport default AllPosts;\n","import { lazy } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = lazy(() => import(\"Common/Container\"));\n\nconst StyledContainer = styled(Container)`\n  max-width: 1280px;\n  min-height: 50vh;\n  padding: 0;\n  padding: ${({ theme }) => theme.margin * 5}px;\n  img {\n    margin-bottom: ${({ theme }) => theme.margin * 4}px;\n  }\n  @media only screen and (max-width: 768px) {\n    h1 {\n      font-size: 2.5rem;\n      margin: 0;\n    }\n    h2 {\n      font-size: 1.5rem;\n      margin: 0;\n    }\n    h3 {\n      font-size: 1.25rem;\n      margin: 0;\n    }\n  }\n  .pagination-controls {\n    button {\n      background: transparent;\n      font-size: 32px;\n      &:disabled {\n        filter: grayscale(1);\n      }\n    }\n    p {\n      margin: 0 !important;\n    }\n  }\n`;\n\nconst Content = styled.div`\n  @media only screen and (max-width: 768px) {\n    h1 {\n      font-size: 2.5rem;\n      margin: 0;\n    }\n    h2 {\n      font-size: 1.5rem;\n      margin: 0;\n    }\n    h3 {\n      font-size: 1.25rem;\n      margin: 0;\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n  > * {\n    font-family: Cabin;\n  }\n  img {\n    max-width: 720px;\n    margin: 0 auto;\n    display: flex;\n\n    @media only screen and (max-width: 575px) {\n      max-width: 300px;\n      display: block;\n      width: auto;\n      height: auto;\n    }\n  }\n  h1,\n  h2,\n  h3 {\n    font-weight: 900;\n    line-height: 125%;\n    font-family: Raleway;\n  }\n  h3 {\n    font-size: 1.75rem;\n  }\n  code {\n    background-color: ${({ theme }) => theme.secondaryBackground};\n    color: ${({ theme }) => theme.accent.main};\n    font-family: Fira Code, monospace;\n    font-style: normal;\n    font-weight: normal;\n  }\n  pre {\n    background-color: ${({ theme }) => theme.secondaryBackground};\n    padding: ${({ theme }) => theme.margin}px;\n    > * {\n      color: ${({ theme }) => theme.accent.main};\n      font-family: Fira Code, monospace;\n      font-style: normal;\n      font-weight: normal;\n      padding-left: ${({ theme }) => theme.margin}px;\n      &:before {\n        content: \"~ \";\n      }\n    }\n  }\n  li {\n    font-size: 1rem;\n    color: ${({ theme }) => theme.accent.main};\n  }\n  a {\n    text-decoration: underline;\n    font-weight: 900;\n  }\n`;\nexport default { StyledContainer, Content };\n"],"sourceRoot":""}