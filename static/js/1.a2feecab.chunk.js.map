{"version":3,"sources":["pages/Home/index.js","pages/Home/style.js"],"names":["Banner","lazy","SkillsTerminal","ContactFrom","ContentBlock","BlogGrid","ScrollToTop","Container","BLOGPOSTS_QUERY","CONFIG","blog","hashnodeUsername","Home","t","useTranslate","useQuery","loading","data","useEffect","element","document","getElementById","scrollIntoView","behavior","StyledContainer","LoadingModal","StyledBackgroundContainer","justify","type","first","title","IntroContent","subtitle","text","button","icon","id","size","bg","transparent","AboutContent","content","section","skills","skillsTerminal","BlogContent","posts","user","publication","StyledBlackAndWhiteContainer","ContactContent","styled","theme","gradients","main","process","margin","div","accent","secondary","background"],"mappings":"2qBAAA,qGAWMA,EAASC,gBAAK,kBAAM,kCACpBC,EAAiBD,gBAAK,kBAAM,wDAC5BE,EAAcF,gBAAK,kBAAM,yDACzBG,EAAeH,gBAAK,kBAAM,wDAC1BI,EAAWJ,gBAAK,kBAAM,kCACtBK,EAAcL,gBAAK,kBAAM,wDACzBM,EAAYN,gBAAK,kBAAM,2CAIvBO,EAAe,+BACDC,IAAOC,KAAKC,iBADX,4KAkFNC,UAnEF,WAAO,IAAD,IACTC,EAAMC,cAAND,EACR,EAA0BE,YAASP,GAA3BQ,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,KAYjB,OAVAC,qBAAU,WACR,IAAKF,GAAWC,EAAM,CACpB,IAAME,EAAUC,SAASC,eAAe,UACpCF,GACFA,EAAQG,eAAe,CACrBC,SAAU,cAGf,CAACP,IAGF,eAAC,UAAEQ,gBAAH,WACE,cAACxB,EAAD,IACCgB,GACC,cAAC,UAAES,aAAH,UACE,cAAC,IAAD,UAAQZ,EAAE,eAGd,cAACP,EAAD,IACA,cAAC,UAAEoB,0BAAH,UACE,cAAC,IAAD,CAAKC,QAAQ,SAAb,SACE,cAACvB,EAAD,CACEwB,KAAK,QACLZ,QAASA,EACTa,MAAM,OACNC,MAAOC,EAAaD,MACpBE,SAAUD,EAAaE,KACvBC,OAAQH,EAAaG,OACrBC,KAAK,aACLC,GAAG,eAIT,cAAC,IAAD,CAAKC,KAAM,IACX,cAAC,UAAEX,0BAAH,CAA6BY,GAAI,EAAjC,SACE,eAAC/B,EAAD,CAAWgC,aAAW,EAAtB,UACE,cAACnC,EAAD,CACEwB,KAAK,QACLE,MAAOU,EAAaV,MACpBW,QAASD,EAAaP,KACtBG,GAAG,QACHM,QAASF,EAAaE,UAExB,cAACxC,EAAD,CAAgByC,OAAQlC,IAAOmC,sBAGnC,eAACrC,EAAD,WACE,cAACH,EAAD,CAAcwB,KAAK,OAAOE,MAAOe,EAAYf,MAAOM,GAAG,SACvD,cAAC/B,EAAD,CAAUW,QAASA,EAAS8B,MAAK,OAAE7B,QAAF,IAAEA,GAAF,UAAEA,EAAM8B,YAAR,iBAAE,EAAYC,mBAAd,aAAE,EAAyBF,WAE9D,cAAC,UAAEG,6BAAH,UACE,cAAC,IAAD,CAAKtB,QAAQ,SAAb,SACE,cAACxB,EAAD,CACE2B,MAAOoB,EAAepB,MACtBE,SAAUkB,EAAelB,SACzBI,GAAG,qB,wEC5FT7B,EAAYN,gBAAK,kBAAM,2CAEvByB,EAA4ByB,YAAO5C,EAAP4C,CAAH,2aAEP,qBAAGC,MAAkBC,UAAUC,QAC/C,gBAAGhB,EAAH,EAAGA,GAAH,qBAAoBiB,IAApB,kBAAoDjB,GAAM,EAA1D,eASS,mBAA8B,EAA9B,EAAGc,MAAkBI,UAIrB,mBAA8B,EAA9B,EAAGJ,MAAkBI,UAMhChC,EAAkB2B,YAAO5C,EAAP4C,CAAH,uJAON,mBAA8B,EAA9B,EAAGC,MAAkBI,UAI9B/B,EAAe0B,IAAOM,IAAV,mSAIF,qBAAGL,MAAkBnB,QAUxB,qBAAGmB,MAAkBM,OAAOJ,QAInCL,EAA+BE,YAAO5C,EAAP4C,CAAH,gtBAO1B,qBAAGC,MAAkBM,OAAOC,aAC5B,qBAAGP,MAAkBQ,cAMnB,qBAAGR,MAAkBM,OAAOC,aAC5B,qBAAGP,MAAkBQ,cAOrB,qBAAGR,MAAkBM,OAAOC,aAC5B,qBAAGP,MAAkBQ,cAOrB,qBAAGR,MAAkBM,OAAOC,aAC5B,qBAAGP,MAAkBQ,cAMhB,WACblC,4BACAD,eACAD,kBACAyB","file":"static/js/1.a2feecab.chunk.js","sourcesContent":["import { lazy, useEffect } from \"react\";\nimport { useQuery } from \"graphql-hooks\";\nimport useTranslate from \"Hooks/useTranslate\";\n\nimport IntroContent from \"Content/IntroContent.json\";\nimport BlogContent from \"Content/BlogContent.json\";\nimport AboutContent from \"Content/AboutContent.json\";\nimport ContactContent from \"Content/ContactContent.json\";\nimport CONFIG from \"Config\";\nimport { Row, Title } from \"Common\";\n\nconst Banner = lazy(() => import(\"Components/Banner\"));\nconst SkillsTerminal = lazy(() => import(\"Components/SkillsTerminal\"));\nconst ContactFrom = lazy(() => import(\"Components/ContactForm\"));\nconst ContentBlock = lazy(() => import(\"Components/ContentBlock\"));\nconst BlogGrid = lazy(() => import(\"Components/BlogGrid\"));\nconst ScrollToTop = lazy(() => import(\"Common/ScrollToTop\"));\nconst Container = lazy(() => import(\"Common/Container\"));\n\nimport S from \"./style\";\n\nconst BLOGPOSTS_QUERY = `{\n  user(username: \"${CONFIG.blog.hashnodeUsername}\") {\n    publication {\n      posts(page: 0) {\n        title\n        brief\n        slug\n        coverImage\n        dateAdded\n        cuid\n      }\n    }\n  }\n}`;\n\nconst Home = () => {\n  const { t } = useTranslate();\n  const { loading, data } = useQuery(BLOGPOSTS_QUERY);\n\n  useEffect(() => {\n    if (!loading && data) {\n      const element = document.getElementById(\"header\");\n      if (element)\n        element.scrollIntoView({\n          behavior: \"smooth\",\n        });\n    }\n  }, [loading]);\n\n  return (\n    <S.StyledContainer>\n      <Banner />\n      {loading && (\n        <S.LoadingModal>\n          <Title>{t(\"loading\")}</Title>\n        </S.LoadingModal>\n      )}\n      <ScrollToTop />\n      <S.StyledBackgroundContainer>\n        <Row justify=\"center\">\n          <ContentBlock\n            type=\"right\"\n            loading={loading}\n            first=\"true\"\n            title={IntroContent.title}\n            subtitle={IntroContent.text}\n            button={IntroContent.button}\n            icon=\"avatar.png\"\n            id=\"header\"\n          />\n        </Row>\n      </S.StyledBackgroundContainer>\n      <Row size={4}></Row>\n      <S.StyledBackgroundContainer bg={2}>\n        <Container transparent>\n          <ContentBlock\n            type=\"right\"\n            title={AboutContent.title}\n            content={AboutContent.text}\n            id=\"about\"\n            section={AboutContent.section}\n          />\n          <SkillsTerminal skills={CONFIG.skillsTerminal} />\n        </Container>\n      </S.StyledBackgroundContainer>\n      <Container>\n        <ContentBlock type=\"left\" title={BlogContent.title} id=\"blog\" />\n        <BlogGrid loading={loading} posts={data?.user?.publication?.posts} />\n      </Container>\n      <S.StyledBlackAndWhiteContainer>\n        <Row justify=\"center\">\n          <ContactFrom\n            title={ContactContent.title}\n            subtitle={ContactContent.subtitle}\n            id=\"contact\"\n          />\n        </Row>\n      </S.StyledBlackAndWhiteContainer>\n    </S.StyledContainer>\n  );\n};\n\nexport default Home;\n","import { lazy } from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = lazy(() => import(\"Common/Container\"));\n\nconst StyledBackgroundContainer = styled(Container)`\n  &&& {\n    background-image: ${({ theme }) => theme.gradients.main},\n      ${({ bg }) => `url(\"${process.env.PUBLIC_URL}/img/bg${bg || 1}.webp\");`}\n    background-attachment: fixed;\n    background-position: center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: relative;\n    top: -55px;\n    max-width: unset;\n    > div {\n      padding: ${({ theme }) => theme.margin * 5}px;\n    }\n    @media only screen and (max-width: 480px) {\n      > div {\n      padding: ${({ theme }) => theme.margin * 4}px 0;\n      }\n    }\n  }\n`;\n\nconst StyledContainer = styled(Container)`\n  position: relative;\n  top: -55px;\n  max-width: unset;\n  padding: 0;\n  > div,\n  section {\n    padding: ${({ theme }) => theme.margin * 5}px;\n  }\n`;\n\nconst LoadingModal = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  background: ${({ theme }) => theme.text};\n  opacity: 0.7;\n  overflow: hidden;\n  z-index: 1;\n  top: 0;\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  > h1 {\n    color: ${({ theme }) => theme.accent.main};\n  }\n`;\n\nconst StyledBlackAndWhiteContainer = styled(Container)`\n  &&& {\n    height: 150%;\n    padding-top: 15%;\n    max-width: unset;\n    background: linear-gradient(\n      180deg,\n      ${({ theme }) => theme.accent.secondary} 50%,\n      ${({ theme }) => theme.background} 50%\n    );\n    @media only screen and (max-width: 760px) {\n      height: auto;\n      background: linear-gradient(\n        180deg,\n        ${({ theme }) => theme.accent.secondary} 25%,\n        ${({ theme }) => theme.background} 25%\n      );\n    }\n    @media only screen and (max-width: 480px) {\n      height: auto;\n      background: linear-gradient(\n        180deg,\n        ${({ theme }) => theme.accent.secondary} 10%,\n        ${({ theme }) => theme.background} 15%\n      );\n    }\n    @media only screen and (max-width: 320px) {\n      height: auto;\n      background: linear-gradient(\n        180deg,\n        ${({ theme }) => theme.accent.secondary} 15%,\n        ${({ theme }) => theme.background} 15%\n      );\n    }\n  }\n`;\n\nexport default {\n  StyledBackgroundContainer,\n  LoadingModal,\n  StyledContainer,\n  StyledBlackAndWhiteContainer,\n};\n"],"sourceRoot":""}